nginx中，红黑树的应用

1. 基础定义
二叉树；
二叉查找树：中序遍历为单调的**二叉树**；
二叉平衡树：左右树高度差值***不超过*** 一个常数，一般为一；
平衡二叉查找树：合并二叉查找树和二叉平衡树；

简单对比AVL树和红黑树
AVL树使用树旋转来保证任一节点对应的两棵子树的最大高度差为1

红黑树：
节点是红色或黑色。
根是黑色。
所有叶子都是黑色（叶子是NIL节点）。
每个红色节点必须有两个黑色的子节点。（从每个叶子到根的所有路径上不能有两个连续的红色节点。）
从任一节点到其每个叶子的所有简单路径都包含相同数目的黑色节点。
当插入数据时，使用节点换色和树旋转平衡树

即：AVL树是平衡二叉查找树，而红黑树是特殊的二叉查找树
由于红黑树没有强制要求高度差，所以插入性能比AVL树要稍好，且删除节点性能更强，且由红黑节点特性控制最大高度差小于两倍。

nginx在读取配置文件和读取文件使用红黑树帮助快速查找文件缓存数据
